{
  "version": 3,
  "sources": ["../../../src/assets/js/form-validation.js"],
  "sourcesContent": ["let typingTimer;\nconst doneTypingInterval = 1000;\n\nfunction validateInput(input) {\n    const errorContainer = input.parentElement.querySelector('.error');\n    const errorText = errorContainer.querySelector(\".error__text\")\n\n    if (input.checkValidity()) {\n        errorContainer.style.display = \"none\";\n        input.removeAttribute('aria-invalid')\n        input.removeAttribute('aria-errormessage')\n    } else {\n        errorContainer.style.display = \"flex\";\n        errorText.textContent = input.validationMessage;\n        input.setAttribute('aria-invalid', true)\n        input.setAttribute('aria-errormessage', errorText.id)\n    }\n}\n\nfunction validateInputGroup(input) {\n    const errorContainer = input.parentElement.querySelector('.error');\n\n    let invalidElements = input.querySelectorAll(\":invalid\");\n    invalidElements = [\n        ...invalidElements\n    ];\n\n    if (invalidElements.length == 0) {\n        input.removeAttribute('aria-invalid')\n        input.removeAttribute('aria-errormessage')\n        errorContainer.style.display = \"none\";\n    }\n}\n\nfunction validateInputTyping(input){\n    // Wait for a user to stop typing and display an error message if their input is invalid\n    clearTimeout(typingTimer);\n    \n    typingTimer = setTimeout(function() {\n        validateInput(input)\n    }, doneTypingInterval);\n}\n\nfunction validateFormSubmit(event, element) {\n    let invalidElements = element.querySelectorAll(\":invalid\");\n\n    invalidElements = [\n        ...invalidElements\n    ];\n    invalidElements = invalidElements.filter(input => input.type != \"radio\" && input.type != \"checkbox\");\n    \n    for (index in invalidElements) {\n        let item = invalidElements[index];\n        let errorContainer = item.parentElement.querySelector('.error');\n        let errorText = errorContainer.querySelector(\".error__text\")\n        if (item.validationMessage) {\n            errorContainer.style.display = \"flex\";\n            item.setAttribute('aria-invalid', true)\n            item.setAttribute('aria-errormessage', errorText.id)\n            errorText.textContent = item.validationMessage;\n        } else if (item.querySelector(':invalid')) {\n            errorContainer.style.display = \"flex\";\n            item.setAttribute('aria-invalid', true)\n            item.setAttribute('aria-errormessage', errorText.id)\n            errorText.textContent = item.querySelector(':invalid').validationMessage;\n        }\n    }\n\n    if (invalidElements.length > 0) {\n        event.preventDefault();\n        invalidElements[0].focus();\n        return false\n    } else {\n        return true;\n    }\n\n}\n\nwindow.validateInput = validateInput;\nwindow.validateInputTyping = validateInputTyping;\nwindow.validateInputGroup = validateInputGroup;\nwindow.validateFormSubmit = validateFormSubmit;\n\n// If the min or max value of the provided input should be the current date, set the attribute\nfunction setMinMaxDateToday(input) {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) {\n        dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n        mm = '0' + mm;\n    } \n                    \n    today = yyyy + '-' + mm + '-' + dd;\n    \n    if (input.classList.contains(\"c-date-input__input--min-today\")) {\n        input.setAttribute(\"min\", today);\n    } else if (input.classList.contains(\"c-date-input__input--max-today\")) {\n        input.setAttribute(\"max\", today);\n    }\n}\n\nwindow.setMinMaxDateToday = setMinMaxDateToday;"],
  "mappings": "MAAA,IAAIA,EAGJ,SAASC,EAAcC,EAAO,CAC1B,IAAMC,EAAiBD,EAAM,cAAc,cAAc,QAAQ,EAC3DE,EAAYD,EAAe,cAAc,cAAc,EAEzDD,EAAM,cAAc,GACpBC,EAAe,MAAM,QAAU,OAC/BD,EAAM,gBAAgB,cAAc,EACpCA,EAAM,gBAAgB,mBAAmB,IAEzCC,EAAe,MAAM,QAAU,OAC/BC,EAAU,YAAcF,EAAM,kBAC9BA,EAAM,aAAa,eAAgB,EAAI,EACvCA,EAAM,aAAa,oBAAqBE,EAAU,EAAE,EAE5D,CAEA,SAASC,EAAmBH,EAAO,CAC/B,IAAMC,EAAiBD,EAAM,cAAc,cAAc,QAAQ,EAE7DI,EAAkBJ,EAAM,iBAAiB,UAAU,EACvDI,EAAkB,CACd,GAAGA,CACP,EAEIA,EAAgB,QAAU,IAC1BJ,EAAM,gBAAgB,cAAc,EACpCA,EAAM,gBAAgB,mBAAmB,EACzCC,EAAe,MAAM,QAAU,OAEvC,CAEA,SAASI,EAAoBL,EAAM,CAE/B,aAAaM,CAAW,EAExBA,EAAc,WAAW,UAAW,CAChCP,EAAcC,CAAK,CACvB,EAAG,GAAkB,CACzB,CAEA,SAASO,EAAmBC,EAAOC,EAAS,CACxC,IAAIL,EAAkBK,EAAQ,iBAAiB,UAAU,EAEzDL,EAAkB,CACd,GAAGA,CACP,EACAA,EAAkBA,EAAgB,OAAOJ,GAASA,EAAM,MAAQ,SAAWA,EAAM,MAAQ,UAAU,EAEnG,IAAK,SAASI,EAAiB,CAC3B,IAAIM,EAAON,EAAgB,KAAK,EAC5BH,EAAiBS,EAAK,cAAc,cAAc,QAAQ,EAC1DR,EAAYD,EAAe,cAAc,cAAc,EACvDS,EAAK,mBACLT,EAAe,MAAM,QAAU,OAC/BS,EAAK,aAAa,eAAgB,EAAI,EACtCA,EAAK,aAAa,oBAAqBR,EAAU,EAAE,EACnDA,EAAU,YAAcQ,EAAK,mBACtBA,EAAK,cAAc,UAAU,IACpCT,EAAe,MAAM,QAAU,OAC/BS,EAAK,aAAa,eAAgB,EAAI,EACtCA,EAAK,aAAa,oBAAqBR,EAAU,EAAE,EACnDA,EAAU,YAAcQ,EAAK,cAAc,UAAU,EAAE,kBAE/D,CAEA,OAAIN,EAAgB,OAAS,GACzBI,EAAM,eAAe,EACrBJ,EAAgB,CAAC,EAAE,MAAM,EAClB,IAEA,EAGf,CAEA,OAAO,cAAgBL,EACvB,OAAO,oBAAsBM,EAC7B,OAAO,mBAAqBF,EAC5B,OAAO,mBAAqBI,EAG5B,SAASI,EAAmBX,EAAO,CAC/B,IAAIY,EAAQ,IAAI,KACZC,EAAKD,EAAM,QAAQ,EACnBE,EAAKF,EAAM,SAAS,EAAI,EACxBG,EAAOH,EAAM,YAAY,EAEzBC,EAAK,KACLA,EAAK,IAAMA,GAGXC,EAAK,KACLA,EAAK,IAAMA,GAGfF,EAAQG,EAAO,IAAMD,EAAK,IAAMD,EAE5Bb,EAAM,UAAU,SAAS,gCAAgC,EACzDA,EAAM,aAAa,MAAOY,CAAK,EACxBZ,EAAM,UAAU,SAAS,gCAAgC,GAChEA,EAAM,aAAa,MAAOY,CAAK,CAEvC,CAEA,OAAO,mBAAqBD",
  "names": ["typingTimer", "validateInput", "input", "errorContainer", "errorText", "validateInputGroup", "invalidElements", "validateInputTyping", "typingTimer", "validateFormSubmit", "event", "element", "item", "setMinMaxDateToday", "today", "dd", "mm", "yyyy"]
}
